DROP DATABASE IF EXISTS `web_trang_suc`;
CREATE DATABASE IF NOT EXISTS `web_trang_suc`;
USE `web_trang_suc`;

/* ------------------------------------- ROLE */

CREATE TABLE `role` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `isDeleted` int
);

/* ------------------------------------- USER */

CREATE TABLE `user` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `fullname` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `phone_number` varchar(255) NOT NULL,
  `password` varchar(255),
  `role_id` int,
  `created_at` date,
  `updated_at` date,
  `deleted` int,
  `reset_token` varchar(255),
  `token_expiry` DATETIME
);

/* ------------------------------------- CATEGORY */

CREATE TABLE `category` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `isDeleted` int
);

/* ------------------------------------- PRODUCT */

CREATE TABLE `product` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `price` int NOT NULL,
  `category_id` int,
  `discount` int,
  `thumbnail` varchar(500),
  `description` varchar(500),
  `quantity` int,
  `created_at` date,
  `updated_at` date,
  `deleted` int,
  isShow int,
  isOutstanding int,
  isNew int
);

/* ------------------------------------- GALLERY */

CREATE TABLE `gallery` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `title` text,
  `thumbnail` varchar(500)
);

/* ------------------------------------- CONTACT */

CREATE TABLE `contact` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `subject_name` varchar(255),
  `note` varchar(255),
  `thumbnail` varchar(500),
  `user_id` int,
  `product_id` int
);

/* ------------------------------------- ORDER */

CREATE TABLE `order` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `fullname` varchar(255) NOT NULL,
  `email` varchar(255),
  `phone_number` varchar(255) NOT NULL,
  `address` varchar(255) NOT NULL,
  `note` varchar(255),
  `order_date` date,
  `status` int,
  `total_money` int,
  `user_id` int,
  `isDeleted` int
);

/* ------------------------------------- ORDERDETAIL */

CREATE TABLE `orderdetail` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `order_id` int,
  `product_id` int,
  `price` int,
  `num` int,
  `total_money` int
);

/* ------------------------------------- ROLE_PERMISSION */

CREATE TABLE `role_permission` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `role_id` int,
  `permission_id` int,
  `isAllowed` int
);

/* ------------------------------------- PERMISSION */

CREATE TABLE `permission` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `description` varchar(255)
);

CREATE TABLE `import` (
  `id` int PRIMARY KEY AUTO_INCREMENT,
  `total_import_order` int, 
  `user_id` int,
  `created_at` date,
  `isDeleted` int
);

CREATE TABLE `importdetail` (
  `import_id` int,
  `product_id` int, 
  `amount` int,
  `price` int,
  `total_price` int,
  `isDeleted` int
);

/* ------------------------------------- SET DEFAULT VALUES */

ALTER TABLE `product` ALTER isShow SET DEFAULT 1;
ALTER TABLE `product` ALTER isOutstanding SET DEFAULT 1;
ALTER TABLE `product` ALTER isNew SET DEFAULT 1;

/* ------------------------------------- REFERENCES  */

ALTER TABLE `user` 
ADD FOREIGN KEY (`role_id`) 
REFERENCES `role` (`id`);

ALTER TABLE `product` 
ADD FOREIGN KEY (`category_id`) 
REFERENCES `category` (`id`);

ALTER TABLE `orderdetail` 
ADD FOREIGN KEY (`order_id`) 
REFERENCES `order` (`id`);

ALTER TABLE `orderdetail` 
ADD FOREIGN KEY (`product_id`) 
REFERENCES `product` (`id`);

ALTER TABLE `order` 
ADD FOREIGN KEY (`user_id`) 
REFERENCES `user` (`id`);

ALTER TABLE `contact` 
ADD FOREIGN KEY (`user_id`) 
REFERENCES `user` (`id`);

ALTER TABLE `contact` 
ADD FOREIGN KEY (`product_id`) 
REFERENCES `product` (`id`);

ALTER TABLE `role_permission` 
ADD FOREIGN KEY (`permission_id`) 
REFERENCES `permission` (`id`);

ALTER TABLE `role_permission` 
ADD FOREIGN KEY (`role_id`) 
REFERENCES `role` (`id`);

ALTER TABLE `importdetail`
ADD FOREIGN KEY (`product_id`)
REFERENCES `product` (`id`);

ALTER TABLE `importdetail`
ADD FOREIGN KEY (`import_id`)
REFERENCES `import` (`id`);

ALTER TABLE `import`
ADD FOREIGN KEY (`user_id`)
REFERENCES `user` (`id`);

/* ------------------------------------- TRIGGERS */

CREATE TRIGGER user_time_create 
BEFORE INSERT ON `user` 
FOR EACH ROW 
  SET NEW.created_at = CURRENT_DATE;

CREATE TRIGGER import_time_create 
BEFORE INSERT ON `import` 
FOR EACH ROW 
  SET NEW.created_at = CURRENT_DATE;

CREATE TRIGGER product_time_create 
BEFORE INSERT ON `product` 
FOR EACH ROW 
  SET NEW.created_at = CURRENT_DATE;

CREATE TRIGGER order_time_create 
BEFORE INSERT ON `order` 
FOR EACH ROW 
  SET NEW.order_date = CURRENT_DATE; 

CREATE TRIGGER product_time_update 
BEFORE UPDATE ON `product` 
FOR EACH ROW 
  SET NEW.updated_at = CURRENT_DATE;

CREATE TRIGGER user_time_update 
BEFORE UPDATE ON `user` 
FOR EACH ROW 
  SET NEW.updated_at = CURRENT_DATE;

CREATE TRIGGER update_product_price
BEFORE UPDATE ON `product`
FOR EACH ROW 
  SET NEW.`price` = NEW.`price` - ((NEW.`price` * NEW.`discount`) / 100);

CREATE TRIGGER user_delete_create 
BEFORE INSERT ON `user` 
FOR EACH ROW 
  SET NEW.deleted = 0;

CREATE TRIGGER product_delete_create 
BEFORE INSERT ON `product` 
FOR EACH ROW 
  SET NEW.deleted = 0;

CREATE TRIGGER category_delete_create 
BEFORE INSERT ON `category` 
FOR EACH ROW 
  SET NEW.isDeleted = 0;

CREATE TRIGGER order_delete_create 
BEFORE INSERT ON `order` 
FOR EACH ROW 
  SET NEW.isDeleted = 0;

CREATE TRIGGER role_delete_create 
BEFORE INSERT ON `role` 
FOR EACH ROW 
  SET NEW.isDeleted = 0;

CREATE TRIGGER import_delete_create 
BEFORE INSERT ON `import` 
FOR EACH ROW 
  SET NEW.isDeleted = 0;

CREATE TRIGGER import_detail_create 
BEFORE INSERT ON `importdetail` 
FOR EACH ROW 
  SET NEW.isDeleted = 0;

-- Automatically calculates the `total_import_order`
CREATE TRIGGER calculate_import_order
AFTER INSERT ON `importdetail`
FOR EACH ROW
  UPDATE `import` 
  SET `total_import_order` = (
    SELECT SUM(`total_price`)
    FROM `importdetail`
    WHERE `import_id` = NEW.`import_id`
  )
  WHERE `id` = NEW.`import_id`;

-- Automatically calculates the `total_order`
CREATE TRIGGER calculate_total_order
AFTER INSERT ON `orderdetail`
FOR EACH ROW
  UPDATE `order` 
  SET total_money = (
    SELECT SUM(total_money)
    FROM orderdetail
    WHERE order_id = NEW.order_id
  );

CREATE TRIGGER get_product_price
BEFORE INSERT ON `orderdetail`
FOR EACH ROW 
  SET NEW.`price` = (
    SELECT `price` 
    FROM `product` 
    WHERE NEW.`product_id` = `product`.`id`
  );

CREATE TRIGGER calculate_total_money_orderdetail
BEFORE INSERT ON `orderdetail`
FOR EACH ROW 
  SET NEW.`total_money` = NEW.`price` * NEW.`num`;

-- Automatically add amount to product from importdetail
CREATE TRIGGER add_amount_to_product
AFTER INSERT ON `importdetail`
FOR EACH ROW
  UPDATE `product`
  SET `quantity` = `quantity` + NEW.`amount`
  WHERE `id` = NEW.`product_id`;

CREATE TRIGGER set_default_product_quantity
BEFORE INSERT ON `product`
FOR EACH ROW 
  SET NEW.`quantity` = 0;

CREATE TRIGGER calculate_product_price
BEFORE INSERT ON `product`
FOR EACH ROW 
  SET NEW.`price` = NEW.`price` - ((NEW.`price` * NEW.`discount`) / 100);

CREATE TRIGGER calculate_import_total_price
BEFORE INSERT ON `importdetail`
FOR EACH ROW 
  SET NEW.`total_price` = NEW.`amount` * NEW.`price`;

CREATE TRIGGER create_expiry_time
BEFORE UPDATE ON `user`
FOR EACH ROW
  SET NEW.`token_expiry` = DATE_ADD(NOW(), INTERVAL 30 MINUTE);


/* ------------------------------------- INSERT VALUES */
INSERT INTO `category` (`name`, `isDeleted`) VALUES 
('Nhẫn', 0), 
('Vòng Cổ', 0), 
('Trâm Cài', 0),
('Bông tai', 0);

INSERT INTO `product` (`title`, `price`, `category_id`, `thumbnail`, `description`, `quantity`, `discount`) VALUES
('Bông tai cao cấp Biz', 350000, 4, '../assets/imgs/img1.png', 'Sản phẩm này rất đẹp', 100, 10),
('Nhẫn vòng ADV', 700000, 1, '../assets/imgs/Nhẫn vòng ADV.png', 'Sản phẩm hot nhất hiện nay', 100, 5),
('Nhẫn vàng cao cấp', 700000, 1, '../assets/imgs/Nhẫn vàng cao cấp.png', 'Sản phẩm hot nhất hiện nay', 100, 13),
('Nhẫn hồng khắc tê', 700000, 1, '../assets/imgs/Nhẫn hồng khắc tê.png', 'Sản phẩm hot nhất hiện nay', 100, 10),
('Nhẫn tình yêu', 700000, 1, '../assets/imgs/Nhẫn tình yêu.png', 'Sản phẩm hot nhất hiện nay', 100, 8),
('Trâm cài', 800000, 3, '../assets/imgs/img1.png', 'Sản phẩm tốt nhất cho người giàu', 100, 10),
('Dây chuyền bạc Moments mạ vàng 14K vô cực', 600000, 2, '../assets/imgs/Dây Chuyền Bạc Moments Mạ Vàng 14K Vô Cực.png', 'Đây là một sợi dây chuyền có giá trị cao', 100, 10),
('Dây chuyền bạc mặt trái tim', 600000, 2, '../assets/imgs/Dây Chuyền Bạc Mặt Trái Tim.png', 'Đây là một sợi dây chuyền có giá trị cao', 100, 0);

INSERT INTO `gallery` (`title`, `thumbnail`) VALUES
('Dây chuyền bạc ba mặt tròn đính đá', '../assets/imgs/Dây Chuyền Bạc  Ba Mặt Tròn Đính Đá.png'),
('Dây chuyền bạc đính ngọc trai', '../assets/imgs/Dây Chuyền Bạc  Đính Ngọc Trai.png'),
('Dây chuyền bạc mạ vàng hồng 14k mặt hình chữ 0', '../assets/imgs/Dây Chuyền Bạc  Mạ Vàng Hồng 14k Mặt Hình Chữ O.png'),
('Dây chuyền bạc mặt trái tiêm nhiều màu', '../assets/imgs/Dây Chuyền Bạc  Mặt Trái Tim Nhiều Màu.png'),
('Dây chuyền bạc vô cực', '../assets/imgs/Dây Chuyền Bạc  Vô Cực.png'),
('Dây chuyền bạc Disney x mặt dây xe bí ngô', '../assets/imgs/Dây Chuyền Bạc Disney x Mặt Dây Xe Bí Ngô.png'),
('Dây chuyền bạc Game Of Thrones x mặt hình rồng đính đá pha lê đỏ', '../assets/imgs/Dây Chuyền Bạc Game Of Thrones x Mặt Hình Rồng Đính Pha Lê Đỏ.png'),
('Dây chuyền bạc mạ vàng 14k chuỗi đính ngọc trai', '../assets/imgs/Dây Chuyền Bạc Mạ Vàng 14K Chuỗi Đính Ngọc Trai.png'),
('Dây chuyền bạc mạ vàng 14k mặt bông hoa đính đá', '../assets/imgs/Dây Chuyền Bạc Mạ Vàng 14k Mặt Bông Hoa Đính Đá.png'),
('Dây chuyền bạc mạ vàng 14k mặt tròn đính đá', '../assets/imgs/Dây Chuyền Bạc Mạ Vàng 14k Mặt Tròn Đính Đá.png'),
('Nhẫn gắn kim cương cao cấp', '../assets/imgs/Nhẫn gắn kim cương cao cấp.png'),
('Nhẫn ngọc trai cao cấp', '../assets/imgs/Nhẫn ngọc trai cao cấp.png'),
('Nhẫn tình yêu', '../assets/imgs/Nhẫn tình yêu.png'),
('Nhẫn vàng cao cấp', '../assets/imgs/Nhẫn vàng cao cấp.png'),
('Nhẫn vòng ADV', '../assets/imgs/Nhẫn vòng ADV.png');

INSERT INTO `role` (`name`) VALUES 
('Quản lý'), 
('Nhân viên'), 
('Khách hàng'), 
('Admin');

INSERT INTO `user` (`fullname`, `email`, `phone_number`, `password`, `role_id`) VALUES
('Gia Cường', 'legiacuong789@gmail.com', '0948800917', '$2a$12$L4AwLzAJb662zW1CD/tpHOVRnFIYQbj2q8rd.fdTrOk9Ccq0S7H82', 1),
('Nhung Vy', 'vnhung@gmail.com', '0372352186', '$2a$12$PPskDJkYOV/7EYk.W0/DGeeho0l69iOa1heL7x/2aO27X4VgNpRMS', 3),
('Minh Cảnh', 'mcanh@gmail.com', '0914072076', '$2a$12$vpRbjSQCAOpjP7lg0NOrmOs9vzPF67GTjrC1AddtCea60HtuWloJK', 2),
('Minh Lâm', 'malm@gmail.com', '0345511698', '$2a$12$vpRbjSQCAOpjP7lg0NOrmOs9vzPF67GTjrC1AddtCea60HtuWloJK', 3),
('Kim Bạc', 'malm@gmail.com', '0345511698', '$2a$12$vpRbjSQCAOpjP7lg0NOrmOs9vzPF67GTjrC1AddtCea60HtuWloJK', 4);

INSERT INTO `order` (`fullname`, `email`, `phone_number`, `address`, `note`, `status`, `total_money`, `user_id`, `isDeleted`) VALUES
('Gia Cường', 'lgcuong@gmail.com', '0948800917', 'Tuy Hòa, Phú Yên', 'Che tên sản phẩm', 1, 700000, 1, 0),
('Nhung Vy', 'vnhung@gmail.com', '0372352186', 'Sơn Tịnh, Quãng Ngãi', 'Đóng gói sản phẩm cẩn thận', 0, 1400000, 2, 0),
('Minh Cảnh', 'mcanh@gmail.com', '0914072076', 'Phú Hòa, Phú Yên', 'Vận chuyển cẩn thận', 0, 1600000, 3, 0),
('Minh Lâm', 'ml@gmail.com', '0658965223', 'Nha Trang, Khánh Hòa', 'Che tên sản phẩm', 1, 1200000, 4, 0),
('Minh Cảnh', 'mcanh@gmail.com', '0914072076', 'Phú Hòa, Phú Yên', 'Tự đem vào sân nhà giúp người nhận', 0, 1200000, 3, 0);

INSERT INTO `orderdetail` (`order_id`, `product_id`, `num`, `total_money`) VALUES
(1, 1, 2, 700000),
(2, 2, 2, 1400000),
(3, 3, 2, 1600000),
(3, 4, 2, 1200000),
(4, 4, 2, 1200000);

INSERT INTO `contact` (`subject_name`, `note`, `thumbnail`, `user_id`, `product_id`) VALUES
('Phản hồi sản phẩm dỏm', 'Sản phẩm rất dỏm đặc biệt là màu sắc và chất liệu', '../assets/imgs/errings/img1.png', 2, 1),
('Phản hồi sản phẩm dỏm', 'Sản phẩm rất dỏm đặc biệt là màu sắc và chất liệu', '../assets/imgs/rings/img1.png', 1, 2),
('Phản hồi sản phẩm kém chất lượng', 'Sản phẩm rất dỏm đặc biệt là màu sắc và chất liệu', '../assets/imgs/necklaces/img1.png', 3, 4);

INSERT INTO `import` (`user_id`) VALUES 
(3);

INSERT INTO `importdetail` (`import_id`, `product_id`, `amount`, `price`, `total_price`) VALUES 
(1, 2, 10, 700000, 7000000),
(1, 3, 100, 700000, 70000000),
(1, 4, 50, 700000, 35000000);

INSERT INTO `permission` (`description`) VALUES
-- USERS
('Add users'),
('Edit users'),
('Delete users'),
('See users'),
-- CATEGORIES
('Add categories'),
('Edit categories'),
('Delete categories'),
('See categories'),
-- ROLES
('Add roles'),
('Edit roles'),
('Delete roles'),
('See roles'),
-- PRODUCTS
('Add products'),
('Edit products'),
('Delete products'),
('See products'),
-- ORDERS
('Solve orders'),
('Delete orders'),
('See orders'),
-- GALLERY
('Add galleries'),
('Edit galleries'),
('Delete galleries'),
('See galleries'),
-- CONTACT
('Solve contacts'),
('Delete contacts'),
('See contacts'),
-- IMPORT INVOICE
('Add imports'),
('Edit imports'),
('Delete imports'),
('See imports'),
-- PERMISSIONS
('Edit permissions'),
('See permissions'),
-- STATISTICS
('See statistics');

INSERT INTO `role_permission` (`role_id`, `permission_id`, `isAllowed`) VALUES
(1, 1, 1), (1, 2, 1), (1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (1, 8, 1), (1, 9, 1), (1, 10, 1),
(1, 11, 1), (1, 12, 1), (1, 13, 1), (1, 14, 1), (1, 15, 1), (1, 16, 1), (1, 17, 1), (1, 18, 1), (1, 19, 1), (1, 20, 1),
(1, 21, 1), (1, 22, 1), (1, 23, 1), (1, 24, 1), (1, 25, 1), (1, 26, 1),(1, 27, 1),(1, 28, 1),(1, 29, 1), (1, 30, 1),
(1, 31, 1),(1, 32, 1),(1, 33, 1),
(2, 1, 1), (2, 2, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (2, 7, 1), (2, 8, 1), (2, 9, 1), (2, 10, 1),
(2, 11, 1), (2, 12, 1), (2, 13, 1), (2, 14, 1), (2, 15, 1), (2, 16, 1), (2, 17, 1), (2, 18, 1), (2, 19, 1), (2, 20, 1),
(2, 21, 1), (2, 22, 1), (2, 23, 1), (2, 24, 1), (2, 25, 1), (2, 26, 1),(2, 27, 1),(2, 28, 1),(2, 29, 1), (2, 30, 1),
(2, 31, 1),(2, 32, 1),(2, 33, 1),
(3, 1, 0), (3, 2, 0), (3, 3, 0), (3, 4, 0), (3, 5, 0), (3, 6, 0), (3, 7, 0), (3, 8, 0), (3, 9, 0), (3, 10, 0),
(3, 11, 0), (3, 12, 0), (3, 13, 0), (3, 14, 0), (3, 15, 0), (3, 16, 0), (3, 17, 0), (3, 18, 0), (3, 19, 0), (3, 20, 0),
(3, 21, 0), (3, 22, 0), (3, 23, 1), (3, 24, 1), (3, 25, 1), (3, 26, 1),(3, 27, 1),(3, 28, 1),(3, 29, 1), (3, 30, 1),
(3, 31, 1),(3, 32, 1),(3, 33, 1),
(4, 1, 1), (4, 2, 1), (4, 3, 1), (4, 4, 1), (4, 5, 1), (4, 6, 1), (4, 7, 1), (4, 8, 1), (4, 9, 1), (4, 10, 1),
(4, 11, 1), (4, 12, 1), (4, 13, 1), (4, 14, 1), (4, 15, 1), (4, 16, 1), (4, 17, 1), (4, 18, 1), (4, 19, 1), (4, 20, 1),
(4, 21, 1), (4, 22, 1), (4, 23, 1), (4, 24, 1), (4, 25, 1), (4, 26, 1),(4, 27, 1),(4, 28, 1),(4, 29, 1), (4, 30, 1),
(4, 31, 1),(4, 32, 1),(4, 33, 1);

/* ------------------------------------- TRIGGERS AFTER INSERTING FOR ROLE, PERMISSION*/

CREATE TRIGGER role_permission_create_allow 
BEFORE INSERT ON `role_permission` 
FOR EACH ROW 
  SET NEW.isAllowed = 0;

CREATE TRIGGER after_insert_row 
AFTER INSERT ON `role` 
FOR EACH ROW 
  INSERT INTO `role_permission` (`role_id`, `permission_id`) VALUES 
  (NEW.id, 1), (NEW.id, 2), (NEW.id, 3), (NEW.id, 4), (NEW.id, 5),
  (NEW.id, 6), (NEW.id, 7), (NEW.id, 8), (NEW.id, 9), (NEW.id, 10),
  (NEW.id, 11), (NEW.id, 12), (NEW.id, 13), (NEW.id, 14), (NEW.id, 15),
  (NEW.id, 16), (NEW.id, 17), (NEW.id, 18), (NEW.id, 19), (NEW.id, 20),
  (NEW.id, 21), (NEW.id, 22), (NEW.id, 23), (NEW.id, 24), (NEW.id, 25), 
  (NEW.id, 26), (NEW.id, 27), (NEW.id, 28), (NEW.id, 29), (NEW.id, 30), 
  (NEW.id, 31), (NEW.id, 32), (NEW.id, 33);

