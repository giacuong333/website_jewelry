CREATE TABLE `role` (
  `id` int PRIMARY KEY,
  `name` varchar(255)
);

CREATE TABLE `user` (
  `id` int PRIMARY KEY,
  `fullname` varchar(255),
  `email` varchar(255),
  `phone_number` varchar(255),
  `address` varchar(255),
  `password` varchar(255),
  `role_id` int,
  `created_at` date,
  `updated_at` date,
  `deleted` int
);

CREATE TABLE `category` (
  `id` int PRIMARY KEY,
  `name` varchar(255)
);

CREATE TABLE `product` (
  `id` int PRIMARY KEY,
  `title` varchar(255),
  `price` int,
  `category_id` int,
  `discount` int,
  `thumbnail` varchar(255),
  `description` varchar(255),
  `created_at` date,
  `updated_at` date,
  `deleted` int
);

CREATE TABLE `gallery` (
  `id` int PRIMARY KEY,
  `product_id` int,
  `thumbnail` varchar(500)
);

CREATE TABLE `feedback` (
  `id` int PRIMARY KEY,
  `firstname` varchar(255),
  `lastname` varchar(255),
  `email` varchar(255),
  `phone_number` varchar(255),
  `subject_name` varchar(255),
  `note` varchar(255),
  `user_id` int
);

CREATE TABLE `order` (
  `id` int PRIMARY KEY,
  `fullname` varchar(255),
  `email` varchar(255),
  `phone_number` varchar(255),
  `address` varchar(255),
  `note` varchar(300),
  `order_date` date,
  `status` int,
  `total_money` int,
  `user_id` int
);

CREATE TABLE `orderdetail` (
  `id` int PRIMARY KEY,
  `order_id` int,
  `product_id` int,
  `price` int,
  `num` int,
  `total_money` int
);

ALTER TABLE `user` ADD FOREIGN KEY (`role_id`) REFERENCES `role` (`id`);

ALTER TABLE `product` ADD FOREIGN KEY (`category_id`) REFERENCES `category` (`id`);

ALTER TABLE `gallery` ADD FOREIGN KEY (`product_id`) REFERENCES `product` (`id`);

ALTER TABLE `orderdetail` ADD FOREIGN KEY (`order_id`) REFERENCES `order` (`id`);

ALTER TABLE `orderdetail` ADD FOREIGN KEY (`product_id`) REFERENCES `product` (`id`);

ALTER TABLE `order` ADD FOREIGN KEY (`user_id`) REFERENCES `user` (`id`);

ALTER TABLE `feedback` ADD FOREIGN KEY (`user_id`) REFERENCES `user` (`id`);

CREATE TRIGGER user_time_create BEFORE INSERT ON user FOR EACH ROW SET NEW.created_at = CURRENT_DATE;

CREATE TRIGGER product_time_create BEFORE INSERT ON product FOR EACH ROW SET NEW.created_at = CURRENT_DATE;

CREATE TRIGGER order_time_create BEFORE INSERT ON order FOR EACH ROW SET NEW.order_date = CURRENT_DATE; 
